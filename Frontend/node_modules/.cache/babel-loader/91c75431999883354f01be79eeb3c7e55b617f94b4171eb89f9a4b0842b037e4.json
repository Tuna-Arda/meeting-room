{"ast":null,"code":"const API_URL = \"http://localhost:7000/api\";\n// Falls dein Backend anders laeuft (z.B. https://localhost:5000/api), bitte anpassen\n\n// ========== ROOMS ==========\nexport async function getAllRooms() {\n  const res = await fetch(`${API_URL}/rooms`);\n  if (!res.ok) throw new Error(\"Fehler beim Laden der Räume\");\n  return res.json();\n}\nexport async function getRoomById(id) {\n  const res = await fetch(`${API_URL}/rooms/${id}`);\n  if (!res.ok) throw new Error(\"Raum nicht gefunden\");\n  return res.json();\n}\nexport async function createRoom(roomData) {\n  const res = await fetch(`${API_URL}/rooms`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(roomData)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\nexport async function updateRoom(id, roomData) {\n  const res = await fetch(`${API_URL}/rooms/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(roomData)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\nexport async function deleteRoom(id) {\n  const res = await fetch(`${API_URL}/rooms/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\n// ========== RESERVATIONS ==========\nexport async function getAllReservations() {\n  const res = await fetch(`${API_URL}/reservations`);\n  if (!res.ok) throw new Error(\"Fehler beim Laden der Reservierungen\");\n  return res.json();\n}\nexport async function getReservationById(id) {\n  const res = await fetch(`${API_URL}/reservations/${id}`);\n  if (!res.ok) throw new Error(\"Reservierung nicht gefunden\");\n  return res.json();\n}\nexport async function createReservation(data) {\n  const res = await fetch(`${API_URL}/reservations`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\nexport async function updateReservation(id, data) {\n  const res = await fetch(`${API_URL}/reservations/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\nexport async function deleteReservation(id) {\n  const res = await fetch(`${API_URL}/reservations/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_URL","getAllRooms","res","fetch","ok","Error","json","getRoomById","id","createRoom","roomData","method","headers","body","JSON","stringify","msg","text","updateRoom","deleteRoom","getAllReservations","getReservationById","createReservation","data","updateReservation","deleteReservation"],"sources":["C:/Users/erzincansivas/Documents/Intensivwoche2/Frontend/src/services/apiService.js"],"sourcesContent":["const API_URL = \"http://localhost:7000/api\"; \n// Falls dein Backend anders laeuft (z.B. https://localhost:5000/api), bitte anpassen\n\n// ========== ROOMS ==========\nexport async function getAllRooms() {\n  const res = await fetch(`${API_URL}/rooms`);\n  if (!res.ok) throw new Error(\"Fehler beim Laden der Räume\");\n  return res.json();\n}\n\nexport async function getRoomById(id) {\n  const res = await fetch(`${API_URL}/rooms/${id}`);\n  if (!res.ok) throw new Error(\"Raum nicht gefunden\");\n  return res.json();\n}\n\nexport async function createRoom(roomData) {\n  const res = await fetch(`${API_URL}/rooms`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(roomData)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function updateRoom(id, roomData) {\n  const res = await fetch(`${API_URL}/rooms/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(roomData)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function deleteRoom(id) {\n  const res = await fetch(`${API_URL}/rooms/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\n// ========== RESERVATIONS ==========\nexport async function getAllReservations() {\n  const res = await fetch(`${API_URL}/reservations`);\n  if (!res.ok) throw new Error(\"Fehler beim Laden der Reservierungen\");\n  return res.json();\n}\n\nexport async function getReservationById(id) {\n  const res = await fetch(`${API_URL}/reservations/${id}`);\n  if (!res.ok) throw new Error(\"Reservierung nicht gefunden\");\n  return res.json();\n}\n\nexport async function createReservation(data) {\n  const res = await fetch(`${API_URL}/reservations`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function updateReservation(id, data) {\n  const res = await fetch(`${API_URL}/reservations/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function deleteReservation(id) {\n  const res = await fetch(`${API_URL}/reservations/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}