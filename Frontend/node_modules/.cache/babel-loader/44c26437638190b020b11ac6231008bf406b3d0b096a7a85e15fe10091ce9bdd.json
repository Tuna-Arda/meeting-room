{"ast":null,"code":"const API_URL=\"http://localhost:7000/api\";// Falls dein Backend anders laeuft (z.B. https://localhost:5000/api), bitte anpassen\n// ========== ROOMS ==========\nexport async function getAllRooms(){const res=await fetch(`${API_URL}/rooms`);if(!res.ok)throw new Error(\"Fehler beim Laden der Räume\");return res.json();}export async function getRoomById(id){const res=await fetch(`${API_URL}/rooms/${id}`);if(!res.ok)throw new Error(\"Raum nicht gefunden\");return res.json();}export async function createRoom(roomData){const res=await fetch(`${API_URL}/rooms`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(roomData)});if(!res.ok){const msg=await res.text();throw new Error(msg);}return res.json();}export async function updateRoom(id,roomData){const res=await fetch(`${API_URL}/rooms/${id}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(roomData)});if(!res.ok){const msg=await res.text();throw new Error(msg);}return res.json();}export async function deleteRoom(id){const res=await fetch(`${API_URL}/rooms/${id}`,{method:\"DELETE\"});if(!res.ok){const msg=await res.text();throw new Error(msg);}return res.json();}// ========== RESERVATIONS ==========\nexport async function getAllReservations(){const res=await fetch(`${API_URL}/reservations`);if(!res.ok)throw new Error(\"Fehler beim Laden der Reservierungen\");return res.json();}export async function getReservationById(id){const res=await fetch(`${API_URL}/reservations/${id}`);if(!res.ok)throw new Error(\"Reservierung nicht gefunden\");return res.json();}export async function createReservation(data){const res=await fetch(`${API_URL}/reservations`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});if(!res.ok){const msg=await res.text();throw new Error(msg);}return res.json();}export async function updateReservation(id,data){const res=await fetch(`${API_URL}/reservations/${id}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});if(!res.ok){const msg=await res.text();throw new Error(msg);}return res.json();}export async function deleteReservation(id){const res=await fetch(`${API_URL}/reservations/${id}`,{method:\"DELETE\"});if(!res.ok){const msg=await res.text();throw new Error(msg);}return res.json();}","map":{"version":3,"names":["API_URL","getAllRooms","res","fetch","ok","Error","json","getRoomById","id","createRoom","roomData","method","headers","body","JSON","stringify","msg","text","updateRoom","deleteRoom","getAllReservations","getReservationById","createReservation","data","updateReservation","deleteReservation"],"sources":["C:/Users/erzincansivas/Documents/Intensivwoche2/Frontend/src/services/apiService.js"],"sourcesContent":["const API_URL = \"http://localhost:7000/api\"; \n// Falls dein Backend anders laeuft (z.B. https://localhost:5000/api), bitte anpassen\n\n// ========== ROOMS ==========\nexport async function getAllRooms() {\n  const res = await fetch(`${API_URL}/rooms`);\n  if (!res.ok) throw new Error(\"Fehler beim Laden der Räume\");\n  return res.json();\n}\n\nexport async function getRoomById(id) {\n  const res = await fetch(`${API_URL}/rooms/${id}`);\n  if (!res.ok) throw new Error(\"Raum nicht gefunden\");\n  return res.json();\n}\n\nexport async function createRoom(roomData) {\n  const res = await fetch(`${API_URL}/rooms`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(roomData)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function updateRoom(id, roomData) {\n  const res = await fetch(`${API_URL}/rooms/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(roomData)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function deleteRoom(id) {\n  const res = await fetch(`${API_URL}/rooms/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\n// ========== RESERVATIONS ==========\nexport async function getAllReservations() {\n  const res = await fetch(`${API_URL}/reservations`);\n  if (!res.ok) throw new Error(\"Fehler beim Laden der Reservierungen\");\n  return res.json();\n}\n\nexport async function getReservationById(id) {\n  const res = await fetch(`${API_URL}/reservations/${id}`);\n  if (!res.ok) throw new Error(\"Reservierung nicht gefunden\");\n  return res.json();\n}\n\nexport async function createReservation(data) {\n  const res = await fetch(`${API_URL}/reservations`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function updateReservation(id, data) {\n  const res = await fetch(`${API_URL}/reservations/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n\nexport async function deleteReservation(id) {\n  const res = await fetch(`${API_URL}/reservations/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!res.ok) {\n    const msg = await res.text();\n    throw new Error(msg);\n  }\n  return res.json();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}